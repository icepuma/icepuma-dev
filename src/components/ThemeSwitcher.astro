---
---

<button
	id="theme-toggle"
	class="p-2 rounded-lg bg-muted hover:bg-muted/80 transition-colors relative group"
	aria-label="Toggle theme"
>
	<!-- Dark mode icon (moon) -->
	<svg
		id="theme-dark"
		class="w-5 h-5 hidden text-foreground"
		fill="none"
		viewBox="0 0 24 24"
		stroke="currentColor"
	>
		<path
			stroke-linecap="round"
			stroke-linejoin="round"
			stroke-width="2"
			d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z"
		/>
	</svg>

	<!-- Light mode icon (sun) -->
	<svg
		id="theme-light"
		class="w-5 h-5 hidden text-foreground"
		fill="none"
		viewBox="0 0 24 24"
		stroke="currentColor"
	>
		<path
			stroke-linecap="round"
			stroke-linejoin="round"
			stroke-width="2"
			d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z"
		/>
	</svg>

	<!-- System mode icon (monitor) -->
	<svg
		id="theme-system"
		class="w-5 h-5 hidden text-foreground"
		fill="none"
		viewBox="0 0 24 24"
		stroke="currentColor"
	>
		<path
			stroke-linecap="round"
			stroke-linejoin="round"
			stroke-width="2"
			d="M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"
		/>
	</svg>

	<!-- Tooltip -->
	<span
		id="theme-tooltip"
		class="absolute top-1/2 right-full -translate-y-1/2 mr-3 px-3 py-1.5 text-xs font-medium bg-card text-card-foreground rounded border border-border opacity-0 group-hover:opacity-100 transition-opacity pointer-events-none whitespace-nowrap shadow-lg z-50"
	>
		<span id="tooltip-text">System</span>
		<span class="absolute top-1/2 left-full -translate-y-1/2 -ml-[3px] w-2 h-2 bg-card border-r border-t border-border rotate-45"></span>
	</span>
</button>

<script>
	import { loadTheme, setTheme } from "@/utils/theme";
	import type { Theme } from "@/utils/theme";

	function initThemeSwitcher() {
		const button = document.getElementById("theme-toggle");
		const darkIcon = document.getElementById("theme-dark");
		const lightIcon = document.getElementById("theme-light");
		const systemIcon = document.getElementById("theme-system");
		const tooltipText = document.getElementById("tooltip-text");

		if (!button) return;

		let currentTheme = loadTheme();

		function updateIcon(theme: Theme) {
			// Hide all icons
			darkIcon?.classList.add("hidden");
			lightIcon?.classList.add("hidden");
			systemIcon?.classList.add("hidden");

			// Show the appropriate icon
			if (theme === "dark") {
				darkIcon?.classList.remove("hidden");
				if (tooltipText) tooltipText.textContent = "Dark";
			} else if (theme === "light") {
				lightIcon?.classList.remove("hidden");
				if (tooltipText) tooltipText.textContent = "Light";
			} else {
				systemIcon?.classList.remove("hidden");
				if (tooltipText) tooltipText.textContent = "System";
			}
		}

		// Set initial icon
		updateIcon(currentTheme);

		// Handle click - cycle through themes: dark -> light -> system -> dark
		button.addEventListener("click", () => {
			if (currentTheme === "dark") {
				currentTheme = setTheme("light");
			} else if (currentTheme === "light") {
				currentTheme = setTheme("system");
			} else {
				currentTheme = setTheme("dark");
			}
			updateIcon(currentTheme);
		});
	}

	// Initialize on load
	initThemeSwitcher();

	// Reinitialize after view transitions
	document.addEventListener('astro:after-swap', initThemeSwitcher);
</script>